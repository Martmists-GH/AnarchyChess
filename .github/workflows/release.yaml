name: Build and Release

on:
  push:
    branches:
      - master
    tags:
      - v*

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  Build-Desktop:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v2
        with:
          java-version: '18'
          distribution: 'adopt'
          cache: 'gradle'

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: -Pdevelopment=false :ac-frontend:packageReleaseDistributionForCurrentOS

      - name: Upload Artifact for Release
        uses: actions/upload-artifact@v2
        with:
          name: desktop-${{ matrix.os }}
          path: build/dist/main-release/
          retention-days: 1

  Build-App:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          java-version: '18'
          distribution: 'adopt'
          cache: 'gradle'

      - name: Get tag name
        run: |
          set -x
          echo "VERSION_TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: -Pdevelopment=false :ac-frontend:assembleRelease

      - name: Upload Artifact for Release
        uses: actions/upload-artifact@v2
        with:
          name: app
          path: build/ac-frontend/outputs/apk/release/
          retention-days: 1

  Create-Release:
    runs-on: ubuntu-latest
    needs: [Build-Desktop, Build-App]
    if: startsWith(github.ref, 'refs/tags/') && github.repository == 'Martmists-GH/AnarchyChess'
    steps:
      - name: Collect Artifacts
        uses: actions/download-artifact@v2

      - name: Get tag name
        run: |
          set -x
          echo "VERSION_TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

      - name: Prepare artifacts
        run: |
          set -e
          mv app/build/ac-frontend/outputs/apk/release/ac-frontend-release-unsigned.apk anarchychess-${{ env.VERSION_TAG }}.apk
          sha=`sha256sum anarchychess-${{ env.VERSION_TAG }}.apk | awk '{ print $1 }'`
          echo "APK_SHA=$sha" >> $GITHUB_ENV
          
          mv desktop-ubuntu-latest/build/dist/main-release/deb/anarchychess_*.deb anarchychess_${{ env.VERSION_TAG }}.deb
          sha=`sha256sum anarchychess_${{ env.VERSION_TAG }}_amd64.deb | awk '{ print $1 }'`
          echo "DEB_SHA=$sha" >> $GITHUB_ENV
          
          mv desktop-macos-latest/build/dist/main-release/dmg/AnarchyChess-*.dmg anarchychess-${{ env.VERSION_TAG }}.dmg
          sha=`sha256sum anarchychess-${{ env.VERSION_TAG }}.dmg | awk '{ print $1 }'`
          echo "DMG_SHA=$sha" >> $GITHUB_ENV
          
          mv desktop-windows-latest/build/dist/main-release/exe/AnarchyChess-*.msi anarchychess-${{ env.VERSION_TAG }}.msi
          sha=`sha256sum anarchychess-${{ env.VERSION_TAG }}.msi | awk '{ print $1 }'`
          echo "MSI_SHA=$sha" >> $GITHUB_ENV

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION_TAG }}
          name: AnarchyChess Client ${{ env.VERSION_TAG }}
          body: |
            ---
            ### Checksums
            | Variant | SHA-256 |
            | ------- | ------- |
            | Android (apk) | ${{ env.APK_SHA }} |
            | Linux (deb) | ${{ env.DEB_SHA }} |
            | macOS (dmg) | ${{ env.DMG_SHA }} |
            | Windows (msi) | ${{ env.MSI_SHA }} |
          files: |
            anarchychess-${{ env.VERSION_TAG }}.apk
            anarchychess_${{ env.VERSION_TAG }}.deb
            anarchychess-${{ env.VERSION_TAG }}.dmg
            anarchychess-${{ env.VERSION_TAG }}.msi
          draft: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
